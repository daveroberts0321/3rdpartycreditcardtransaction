//checkout page data


const USER_ID='11ee265c1ef5ce0a8e20f9c2'
const USER_API_KEY='11ee593ec3f31a10a7568d9b'
const DEVELOPER_ID='2HW2cbbd'
const LOCATION_ID='11ee265c1dcba6269c3a97f4'


// Define the data for ticket intention
const intentionRequestData = {  
  "location_id": LOCATION_ID,
};

//console.log(intentionRequestData);  

// Define the headers for ticket intention
const intentionHeaders = {
  'user-id': USER_ID, // testing user id: 11ee265c1ef5ce0a8e20f9c2
  'user-api-key': USER_API_KEY, // testing user api key: 11ee593ec3f31a10a7568d9b
  'developer-id': DEVELOPER_ID, // testing developer id: 2HW2cbbd
  'Accept': 'application/json',
  'Content-Type': 'application/json'
};

//console.log(intentionHeaders);

// Post JSON to Fortis API and return the response
export async function load() {
  try {
    const response = await fetch('https://api.sandbox.fortis.tech/v1/elements/ticket/intention', {
      method: 'POST',
      headers: intentionHeaders,
      body: JSON.stringify(intentionRequestData)
    });    

    if (response.status === 200) {
      const intentionResponseData = await response.json();

      //console.log(" Response from fortid intention ", intentionResponseData.data.client_token);



      return {
        props: {
          clientToken: intentionResponseData.data.client_token
        }
      };
    } else {
      const errorResponseData = {
        status: response.status,
        error: await response.text(), // Convert error message to string
      };

      return {
        props: {
          errorResponseData
        }
      };
    }
  } catch (error) {
    console.error("Error at checkout.page.server", error);
    return {
      status: 500,
      error: error.toString(), // Convert error message to string
    };
  }
  // transaction intention is working fine 

}


// formaction = 
export const actions= {
  checkoutform: async ({ request }) => {
    try {
      const formData = new FormData();
      const data = await request.formData();
      

      // Billing form data
      const firstName = data.get("firstName");
      const lastName = data.get("lastName");
      const email = data.get("email");
      const phone = data.get("phone");
      const ticket_id = data.get("ticket_id"); // returned from fortis iframe 
      console.log("ticket id", ticket_id);


      formData.append("firstName", firstName);
      formData.append("lastName", lastName);
      formData.append("email", email);
      formData.append("phone", phone);
      formData.append("fortisToken", ticket_id);// <-- This is where i keep getting a null value 

      /*
      The ticket_id is used on the backend to actually transfer the payment from the iframe. 
      Its just a payment hash that is generated by fortis. and **should be ** returned in the form data.

      i keep getting this:
      10:23:01 AM [vite] page reload src/routes/checkout/+page.server.js
        ticket id null
        form data FormData {
          [Symbol(state)]: [
            { name: 'firstName', value: 'David' },
            { name: 'lastName', value: 'Roberts' },
            { name: 'email', value: 'davidroberts0321@gmail.com' },
            { name: 'phone', value: '7312345135' },
            { name: 'fortisToken', value: 'null' }
          ]
        }
      */    

      console.log("form data", formData); // <-- This is 

      // Just trying to get the ticket id from the form data
      // everything else is working fine
    } catch (error) {
      console.error("Error at checkout.page.server", error);
      return {
        status: 500,
        error: "This didnt work again", 
      };
    }

  }
}

      





